id: rapport-vins
namespace: traitement.vins

inputs:
  - id: github_url
    type: STRING
    defaults: https://github.com/Florian-Biggio/Kestra-project/

tasks:
  - id: wdir
    type: io.kestra.plugin.core.flow.WorkingDirectory
    tasks:
      - id: clone
        type: io.kestra.plugin.git.Clone
        url: "{{ inputs.github_url }}"

      - id: make output dir
        type: io.kestra.core.tasks.scripts.Bash
        commands:
          - mkdir -p output

      - id: analyse_deduplication
        type: io.kestra.plugin.jdbc.duckdb.Query
        inputFiles:
          erp.xlsx: "data/Fichier_erp.xlsx"
          web.xlsx: "data/Fichier_web.xlsx"
          liaison.xlsx: "data/fichier_liaison.xlsx"
        sql: |
          -- Deduplication for ERP and Liaison files
          CREATE TABLE erp_clean AS
          SELECT DISTINCT * FROM read_xlsx(
            '{{workingDir}}/data/Fichier_erp.xlsx',
            all_varchar = true)
          WHERE product_id IS NOT NULL;

          CREATE TABLE liaison_clean AS
          SELECT DISTINCT * FROM read_xlsx(
            '{{workingDir}}/data/fichier_liaison.xlsx',
            all_varchar = true);

          -- Cleaning and deduplicating the Web file
          CREATE TABLE web_clean AS
          SELECT DISTINCT * FROM read_xlsx(
            '{{workingDir}}/data/Fichier_web.xlsx',
            all_varchar = true)
          WHERE sku IS NOT NULL AND post_title IS NOT NULL;

          -- Merging the data
          CREATE TABLE final_merge AS
          SELECT 
            w.sku,
            w.post_title,
            l.product_id,
            CAST(e.price AS DOUBLE) AS erp_price,
            CAST(w.total_sales AS INTEGER) AS web_sales
          FROM web_clean w
          LEFT JOIN liaison_clean l ON w.sku = l.id_web
          LEFT JOIN erp_clean e ON l.product_id = e.product_id;

          -- Calculating total revenue (CA) per product
          SELECT 
            post_title AS product_name, 
            SUM(CAST(erp_price AS DOUBLE) * CAST(web_sales AS INTEGER)) AS CA
          FROM final_merge
          GROUP BY post_title
          ORDER BY CA DESC;

          COPY final_merge TO '{{workingDir}}/output/final_merge.csv' (HEADER, DELIMITER ',');
        outputFiles:
          - "output/final_merge.csv"
        fetchType: STORE

      - id: lancer-script-python
        type: io.kestra.plugin.scripts.python.Commands
        commands:
          - python scripts/traitement_vins.py --input_file output/final_merge.csv
        beforeCommands:
          - pip install pandas openpyxl scipy kestra # Install dependencies if needed
        outputFiles:
          - "output/*.csv"
          - "output/*.xlsx"
        warningOnStdErr:
          False
        taskRunner:
          type: io.kestra.plugin.core.runner.Process

triggers:
  - id: planification_mensuelle
    type: io.kestra.plugin.core.trigger.Schedule
    timezone: Europe/Paris
    cron: "0 9 15 * *"  # Trigger on the 15th of every month at 9 AM 
    recoverMissedSchedules: LAST
